---
import {
  getArticles,
  getCategories,
  type Category,
  type Article,
} from '../services/microcms'
import Link from '../components/primitives/Link.astro'

interface Props {
  title: string
  category: string
}

const { title, category } = Astro.props

// サイドバーとパンくずリストに不要なカテゴリ
const EXCLUDED_CATEGORIES = ['トップ']

// サイドバー
type Menu = {
  [key: string]: { id: string; title: string }[]
}
const menu: Menu = {}
// microCMS情報
const categories = await getCategories({ fields: ['name'] })
const articles = await getArticles({ fields: ['id', 'title', 'category'] })

// サイドバー初期化
categories.contents
  .filter((category: Category) => !EXCLUDED_CATEGORIES.includes(category.name))
  .forEach((category: Category) => {
    menu[category.name] = []
  })

// サイドバーの中身を構築する
articles.contents
  .filter(
    (article: Article) => !EXCLUDED_CATEGORIES.includes(article.category.name),
  )
  .forEach((article: Article) => {
    const category = article.category.name
    menu[category].push({
      id: '/' + article.id,
      title: article.title,
    })
  })
---

<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="中華人民共和国の野球に関するwikiページ" />
    <link rel="icon" href="/favicon.svg" />
    <title>中華人民共和国棒球維基</title>
  </head>
  <body>
    <div class="grid grid-cols-5 m-5 font-mono">
      <!-- ヘッダ -->
      <div id="header" class="flex col-span-5 content-center">
        <!-- モバイルの場合はサイドバーをメニューから開閉 -->
        <button id="nav" class="sm:hidden">
          <svg
            id="navopen"
            class="block h-10 w-10"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M4 18L20 18"
              stroke="#000000"
              stroke-width="2"
              stroke-linecap="round"></path>
            <path
              d="M4 12L20 12"
              stroke="#000000"
              stroke-width="2"
              stroke-linecap="round"></path>
            <path
              d="M4 6L20 6"
              stroke="#000000"
              stroke-width="2"
              stroke-linecap="round"></path>
          </svg>
          <svg
            id="navclose"
            class="hidden block h-10 w-10"
            viewBox="0 -0.5 21 21"
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:xlink="http://www.w3.org/1999/xlink"
          >
            <g
              id="Page-1"
              stroke="none"
              stroke-width="1"
              fill="none"
              fill-rule="evenodd"
            >
              <g
                id="Dribbble-Light-Preview"
                transform="translate(-419.000000, -240.000000)"
                fill="#000000"
              >
                <g id="icons" transform="translate(56.000000, 160.000000)">
                  <polygon
                    id="close-[#1511]"
                    points="375.0183 90 384 98.554 382.48065 100 373.5 91.446 364.5183 100 363 98.554 371.98065 90 363 81.446 364.5183 80 373.5 88.554 382.48065 80 384 81.446"
                  ></polygon>
                </g>
              </g>
            </g>
          </svg>
        </button>
        <span class="text-4xl font-bold text-red-700">
          中華人民共和国棒球維基</span
        >
        {
          !EXCLUDED_CATEGORIES.includes(category) && (
            <span class="text-sm">
              <Link href="/" text="TOP" />/{category}/{title}
            </span>
          )
        }
      </div>
      <div class="col-span-5 m-5"><hr /></div>
      <!-- サイドバー -->
      <div id="menu" class="hidden col-span-5 sm:block sm:col-span-1">
        <div class="flex flex-auto p-2 prose prose-sm">
          <input id="q" class="w-2/3 border border-black" aria-label="q" />
          <button id="search" class="w-1/3 border border-black bg-gray-300"
            >検索</button
          >
        </div>
        {
          Object.keys(menu).map((category: string) => (
            <>
              <b class="prose prose-sm">{category}</b>
              <ul class="list-disc pl-5 mb-5">
                {menu[category].map(
                  (article: { id: string; title: string }) => (
                    <li class="prose prose-sm">
                      <Link href={article.id} text={article.title} />
                    </li>
                  ),
                )}
              </ul>
            </>
          ))
        }
      </div>
      <!-- メイン -->
      <div id="main" class="col-span-5 sm:col-span-4">
        <slot />
      </div>
      <div class="col-span-5 m-5"><hr /></div>
      <!-- フッタ -->
      <div id="footer" class="col-span-5">
        <p class="text-xs">Admin: hctaw_srp</p>
        <p class="text-xs">
          何かご用がある場合は<Link
            href="https://x.com/hctaw_srp"
            text="管理人のXアカウント"
          />までご連絡下さい。
        </p>
      </div>
    </div>
  </body>
</html>

<script lang="ts">
  // サイドバー開閉
  nav.addEventListener('click', () => {
    navopen.classList.toggle('hidden')
    navclose.classList.toggle('hidden')
    menu.classList.toggle('hidden')
    main.classList.toggle('hidden')
    footer.classList.toggle('hidden')
  })

  // 検索処理
  search.addEventListener('click', () => {
    const q = document.getElementById('q').value
    window.location.href = '/search?q=' + q
  })
</script>
